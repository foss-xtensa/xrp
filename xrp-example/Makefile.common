
ifndef XTENSA_SYSTEM
  $(error XTENSA_SYSTEM is not defined)
endif

ifndef XTENSA_CORE
  $(error XTENSA_CORE is not defined)
endif

XTRUN := $(shell [ -x "$$(command -v xt-run)" ] && echo xt-run || echo ${XTENSA_SYSTEM}/../bin/xt-run)
XTENSA_TOOLS := $(shell ${XTRUN} --show-config=xttools)
XTCLANG := ${XTENSA_TOOLS}/bin/xt-clang

DTC := ${XTENSA_TOOLS}/Tools/bin/dtc

LIBFDT_PATH := ${XTENSA_TOOLS}/Tools/

XRP_DSP_CC := ${XTCLANG} --xtensa-core=${XTENSA_CORE}
XRP_DSP_AR := ${XTENSA_TOOLS}/bin/xt-ar
XRP_DSP_RANLIB := ${XTENSA_TOOLS}/bin/xt-ranlib

XRP_SRC ?= ..
ifeq (,$(wildcard ${XRP_SRC}))
  $(error XRP_SRC set to a path that does not exist)
endif

ifdef BUILD_DIR
ifeq (,$(wildcard ${BUILD_DIR}))
  $(error BUILD_DIR set to a path that does not exist)
endif
endif

BLDDIR := $(if ${BUILD_DIR},${BUILD_DIR},.)

LSPBLD := ${BLDDIR}/lspbld
DSPBLD := ${BLDDIR}/dspbld
SYSBLD := ${BLDDIR}/sysbld
HOSTBLD := ${BLDDIR}/hostbld

XRP_DSP_CPPFLAGS := \
  -I${XRP_SRC}/xrp-kernel \
  -I${XRP_SRC}/xrp-common -I${XRP_SRC}/xrp-dsp \
  $(if ${XRP_DSP_DEBUG},-DDEBUG=1)

XRP_DSP_CFLAGS := -W -Wall -g -O2

XRP_DSP_HW_PORT ?= simple

XRP_DSP_LDFLAGS := \
  -lxrp-common \
  -lxrp-dsp \
  -lxrp-dsp-hw-${XRP_DSP_HW_PORT}

ifdef XRP_DSP_USE_SRCS
XRP_DSP_LIBS_OBJS := \
  dspbld/libxrp-common.a \
  dspbld/libxrp-dsp.a \
  dspbld/libxrp-dsp-hw-${XRP_DSP_HW_PORT}.a
XRP_DSP_LDFLAGS := \
  -Ldspbld/ \
  ${XRP_DSP_LDFLAGS}
endif

ifeq (${XRP_DSP_HW_PORT}, simple)
else ifeq (${XRP_DSP_HW_PORT}, simple-xos)
  XRP_DSP_CPPFLAGS += \
    -DHAVE_THREADS_XOS=1
  XRP_DSP_LDFLAGS += \
    -lxos -lxtutil
else
  $(error XRP_DSP_HW_PORT must be "simple" or "simple-xos")
endif

XRP_HOST_CC ?= $(if ${CC},${CC},gcc)

XRP_HOST_MODE ?= standalone

ifneq ($(findstring xt-clang,${XRP_HOST_CC}),xt-clang)
  XRP_HOST_CPPFLAGS += \
    -DHAVE_NANOSLEEP=1
endif

ifeq (${XRP_HOST_MODE}, standalone)
  XRP_HOST_CPPFLAGS += \
    -DHAVE_LIBFDT=1 \
    -DHAVE_FDT_GETPROP=1 \
    -DHAVE_FDT_STRERROR=1 \
    -I${LIBFDT_PATH}/include
else ifeq (${XRP_HOST_MODE}, hosted)
else ifeq (${XRP_HOST_MODE}, single)
else
  $(error XRP_HOST_MODE must be "standalone" or "hosted" or "single")
endif

XRP_HOST_CPPFLAGS += \
  -I${XRP_SRC} -I${XRP_SRC}/xrp-kernel \
  -I${XRP_SRC}/xrp-common \
  -I${XRP_SRC}/xrp-host \
  -I${XRP_SRC}/xrp-host/${XRP_HOST_MODE} \
  $(if ${XRP_HOST_DEBUG},-DDEBUG=1)

XRP_HOST_CFLAGS := -W -Wall -g -O2

XRP_HOST_QUEUE_TYPE ?= sync

ifeq (${XRP_HOST_QUEUE_TYPE}, sync)
  XRP_HOST_CPPFLAGS += \
    -I${XRP_SRC}/xrp-host/thread-single/
else ifeq (${XRP_HOST_QUEUE_TYPE}, threaded)
  XRP_HOST_CPPFLAGS += \
    -DHAVE_THREADS_POSIX=1 \
    -I${XRP_SRC}/xrp-host/thread-pthread
else
  $(error XRP_HOST_QUEUE_TYPE must be "sync" or "threaded")
endif

XT_SUBSYS_SRC ?= $(shell ${XTCLANG} --show-config=config)/examples/MP_Subsystem/xt_sysbuilder_mp/
ifeq (,$(wildcard ${XT_SUBSYS_SRC}))
  $(warning XT_SUBSYS_SRC set to a path that does not exist)
else
  -include ${XT_SUBSYS_SRC}/Makefile.attr
  CORE_NUMS := 0 $(shell seq `expr $(NUM_CORES) - 1`)
  XRP_DSP_BINARIES := $(addprefix ${BLDDIR}/xrp-dsp-standalone,$(CORE_NUMS))
  CORES = $(addprefix DSP_,$(CORE_NUMS))
  XTSC_RUN_BINARY_DEF := $(addprefix --define=,$(join $(addsuffix _BINARY=,$(CORES)), $(XRP_DSP_BINARIES)))
endif
