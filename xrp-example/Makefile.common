
ifndef XTENSA_SYSTEM
  $(error XTENSA_SYSTEM is not defined)
endif

ifndef XTENSA_CORE
  $(error XTENSA_CORE is not defined)
endif

-include ${XTSUBSYS_SRC}/Makefile.attr

XTRUN := $(shell [ -x "$$(command -v xt-run)" ] && echo xt-run || echo ${XTENSA_SYSTEM}/../bin/xt-run)
XTENSA_TOOLS := $(shell ${XTRUN} --show-config=xttools)
XTCLANG := ${XTENSA_TOOLS}/bin/xt-clang

XTENSA_RELEASE := $(shell basename $(dir $(shell ${XTCLANG} --show-config=xttools)))

ifndef XTSUBSYS_SRC
XTSUBSYS_SRC := \
  ${XTENSA_SYSTEM}/../../../../builds/${XTENSA_RELEASE}/${XTENSA_CORE}/examples/MP_Subsystem/xt_sysbuilder_mp/
endif

DTC := ${XTENSA_TOOLS}/Tools/bin/dtc

LIBFDT_PATH := ${XTENSA_TOOLS}/Tools/

XRP_DSP_CC := ${XTCLANG} --xtensa-core=${XTENSA_CORE}
XRP_DSP_AR := ${XTENSA_TOOLS}/bin/xt-ar
XRP_DSP_RANLIB := ${XTENSA_TOOLS}/bin/xt-ranlib

XRP_SRC := ..

XRP_DSP_CPPFLAGS := \
  -I${XRP_SRC}/xrp-common -I${XRP_SRC}/xrp-dsp

XRP_DSP_CFLAGS := -W -Wall -g -O2

ifndef XRP_DSP_HW_PORT
  XRP_DSP_HW_PORT := simple
endif

XRP_DSP_LDFLAGS := \
  -lxrp-common \
  -lxrp-dsp \
  -lxrp-dsp-hw-${XRP_DSP_HW_PORT}

ifdef XRP_DSP_USE_SRCS
XRP_DSP_LIBS_OBJS := \
  dspbld/libxrp-common.a \
  dspbld/libxrp_dsp.a \
  dspbld/libxrp_dsp_hw_${XRP_DSP_HW_PORT}.a
XRP_DSP_LDFLAGS := \
  -Ldspbld \
  ${XRP_DSP_LDFLAGS}
endif

ifeq (${XRP_DSP_HW_PORT}, simple)
else ifeq (${XRP_DSP_HW_PORT}, simple-xos)
  XRP_DSP_CPPFLAGS += \
    -DHAVE_THREADS_XOS=1 \
    -DHAVE_XTOS_SET_INTERRUPT_HANDLER=1 \
    -DHAVE_XTOS_INTERRUPT_ENABLE=1 \
    -DHAVE_XTOS_INTERRUPT_DISABLE=1 \
    -DHAVE_XTOS_SET_EXCEPTION_HANDLER=1
  XRP_DSP_LDFLAGS += \
    -lxos -lxtutil
else
  $(error XRP_DSP_HW_PORT must be "simple" or "simple-xos")
endif

XRP_HOST_CC := gcc

XRP_HOST_CPPFLAGS := \
  -DHAVE_NANOSLEEP=1 \
  -DHAVE_LIBFDT=1 \
  -DHAVE_FDT_GETPROP=1 \
  -DHAVE_FDT_STRERROR=1 \
  -I${LIBFDT_PATH}/include \
  -I${XRP_SRC} -I${XRP_SRC}/xrp-common \
  -I${XRP_SRC}/xrp-host \
  -I${XRP_SRC}/xrp-host/standalone

XRP_HOST_CFLAGS := -W -Wall -g -O2

ifndef XRP_HOST_QUEUE_TYPE
  XRP_HOST_QUEUE_TYPE := sync
endif

ifeq (${XRP_HOST_QUEUE_TYPE}, sync)
  XRP_HOST_CPPFLAGS += \
    -I${XRP_SRC}/xrp-host/thread-single/
else ifeq (${XRP_HOST_QUEUE_TYPE}, threaded)
  XRP_HOST_CPPFLAGS += \
    -DHAVE_THREADS_POSIX=1 \
    -I${XRP_SRC}/xrp-host/thread-pthread
else
  $(error XRP_HOST_QUEUE_TYPE must be "sync" or "threaded")
endif

CORE_NUMS := 0 $(shell seq `expr $(NUM_CORES) - 1`)
XRP_DSP_BINARIES := $(addprefix xrp-dsp-standalone,$(CORE_NUMS))
CORES = $(addprefix DSP_,$(CORE_NUMS))
XTSC_RUN_BINARY_DEF := $(addprefix --define=,$(join $(addsuffix _BINARY=,$(CORES)), $(XRP_DSP_BINARIES)))
